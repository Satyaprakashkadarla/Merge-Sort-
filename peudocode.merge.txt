Here's the pseudocode for the Merge Sort algorithm:

MergeSort(arr):
    if length of arr is less than or equal to 1:
        return arr

    // Divide the array into two halves
    mid = length of arr // 2
    left_half = arr[0:mid]
    right_half = arr[mid:]

    // Recursively sort both halves
    left_half = MergeSort(left_half)
    right_half = MergeSort(right_half)

    // Merge the sorted halves
    merged_array = Merge(left_half, right_half)
    return merged_array

Merge(left, right):
    merged_array = []
    left_index = 0
    right_index = 0

    // Merge until one of the subarrays is exhausted
    while left_index < length of left and right_index < length of right:
        if left[left_index] < right[right_index]:
            append left[left_index] to merged_array
            left_index++
        else:
            append right[right_index] to merged_array
            right_index++

    // Add remaining elements from the left subarray
    append remaining elements of left to merged_array

    // Add remaining elements from the right subarray
    append remaining elements of right to merged_array

    return merged_array
